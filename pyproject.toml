[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ign-lidar-hd"
version = "2.0.3"
description = "IGN LiDAR HD Dataset Processing Library for Building LOD Classification"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "imagodata", email = "simon.ducournau@gmail.com"},
]
keywords = ["lidar", "ign", "machine-learning", "gis", "building-classification"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.21.0",
    "laspy>=2.3.0",
    "lazrs>=0.5.0",  # LAZ compression backend for laspy
    "scikit-learn>=1.0.0",
    "scipy>=1.7.0",  # Spatial operations (KDTree) for tile stitching and boundary features
    "tqdm>=4.60.0",
    "click>=8.0.0",
    "PyYAML>=6.0",
    "psutil>=5.8.0",  # Memory monitoring and system utilities
    "hydra-core>=1.3.0",  # Hierarchical configuration management
    "omegaconf>=2.3.0",  # Configuration with validation
    "requests>=2.25.0",  # HTTP requests for data download
    "Pillow>=9.0.0",  # Image processing for RGB features
    "h5py>=3.0.0",  # HDF5 for AI dataset creation and processing
]

[project.optional-dependencies]
# RGB augmentation support
rgb = [
    "requests>=2.25.0",
    "Pillow>=9.0.0",
]

# YAML pipeline configuration support
pipeline = [
    "PyYAML>=6.0",
]

# GPU acceleration support (basic)
# Note: CuPy requires CUDA. Install with: pip install cupy-cuda11x or cupy-cuda12x
# The 'gpu' extra is intentionally empty to avoid build-from-source issues.
# Users should manually install cupy-cuda11x or cupy-cuda12x based on their CUDA version.
gpu = [
    # cupy must be installed separately: pip install cupy-cuda11x or cupy-cuda12x
]

# Advanced GPU acceleration with RAPIDS cuML
# Note: RAPIDS requires conda installation for best compatibility
# conda install -c rapidsai -c conda-forge -c nvidia cuml
gpu-full = [
    # cupy must be installed separately: pip install cupy-cuda11x or cupy-cuda12x
    "cuml>=23.10.0",  # RAPIDS cuML for GPU-accelerated ML
]

# PyTorch support for dataset classes and deep learning
# Note: Best installed via conda for CUDA support:
# conda install -c pytorch -c nvidia pytorch pytorch-cuda torchvision torchaudio
pytorch = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0",
]

# All optional features (excludes GPU dependencies - install GPU packages separately)
all = [
    "requests>=2.25.0",
    "Pillow>=9.0.0",
    "PyYAML>=6.0",
]

# Development dependencies
dev = [
    "pytest>=6.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.910",
    "build>=0.7.0",
    "twine>=4.0",
    "pre-commit>=2.20",
    "requests>=2.25.0",
    "Pillow>=9.0.0",
    "PyYAML>=6.0",
]

[project.scripts]
ign-lidar-hd = "ign_lidar.cli.main:main"
ign-lidar-hd-v2 = "ign_lidar.cli.main:main"

[project.urls]
Homepage = "https://github.com/sducournau/IGN_LIDAR_HD_DATASET"
Repository = "https://github.com/sducournau/IGN_LIDAR_HD_DATASET"
Documentation = "https://github.com/sducournau/IGN_LIDAR_HD_DATASET#readme"
Issues = "https://github.com/sducournau/IGN_LIDAR_HD_DATASET/issues"

[tool.setuptools.packages.find]
include = ["ign_lidar*"]

[tool.setuptools.package-data]
ign_lidar = ["*.json", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"