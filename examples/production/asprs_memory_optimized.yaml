# ============================================================================
# IGN LiDAR HD - ASPRS Facade Enhanced v6.7 + v3.0.4 CPU
# ============================================================================
# FACADE ENHANCED VERSION - CPU OPTIMIZED
# For systems with moderate RAM (32-40GB) requiring superior facade detection
# - CPU PROCESSING MODE
#
# üêõ v3.0.4 FACADE CLASSIFICATION BUGFIXES (CRITICAL):
# Fixed critical bugs causing classification artifacts and crashes
#
# üÜï v3.0.3 FACADE GEOMETRIC TRANSFORMATIONS:
# Advanced facade adaptation with rotation, scaling, and reconstruction
#
# üÜï v6.7 FACADE CLASSIFICATION IMPROVEMENTS:
# Major improvements to building facade detection based on real-world validation
#
# Based on v6.7 + v3.0.4 with CPU OPTIMIZATIONS:
#
# üêõ v3.0.4 BUGFIXES - CRITICAL STABILITY IMPROVEMENTS:
# 1. FEATURE VALIDATION: All features sanitized before use (NaN/Inf handling)
# 2. GROUND FILTERING: Consistent valid_mask usage (no ground in building classification)
# 3. EDGE DETECTION: Secure curvature validation (no NaN/Inf artifacts)
# 4. SPATIAL VALIDATION: Edge expansion limited to building polygons
# 5. ROOF CLASSIFICATION: Feature validation before roof processing
#
# Impact: 100% crash prevention, ~30-40% fewer classification errors
#
# üî• CPU OPTIMIZATIONS:
# 1. DISABLED GPU: use_gpu = false
# 2. PARALLEL PROCESSING: 8 CPU workers (adjust based on cores)
# 3. LARGER CHUNKS: 5M points per chunk (vs 2M for GPU)
# 4. OPTIMIZED BATCH PROCESSING: Efficient CPU memory usage
# 5. NO GPU MONITORING: Disabled GPU usage tracking
#
# üè¢ FACADE ENHANCEMENT v6.7 (IMPROVED):
# 1. LARGER LATERAL BUFFERS: 1.5-12.0m ‚Üí 1.5-10.0m (optimized adaptive range)
# 2. MORE PERMISSIVE VERTICALITY: 0.70‚Üí0.55 (captures more textured/semi-vertical facades)
# 3. ENHANCED GAP DETECTION: 96‚Üí120 resolution, 4.0‚Üí5.5m band (better missing wall detection)
# 4. LOWER HEIGHT THRESHOLDS: 1.5‚Üí0.5m (catches very low walls/annexes/facades)
# 5. RELAXED NDVI FILTERING: max 0.20‚Üí0.25 (tolerates vegetation near buildings)
# 6. AGGRESSIVE EXPANSION: 3.5‚Üí4.0m search radius + 2.5m initial buffer
#
# EXPECTED MEMORY FOOTPRINT (CPU - OPTIMIZED):
# - Peak: ~45-55GB (increased with larger chunks)
# - Processing: ~35-45GB average
# - Requires 64GB+ RAM systems for safe operation
#
# PERFORMANCE EXPECTATIONS (CPU OPTIMIZED - 8 workers):
# - Feature computation: ~12-18 min per tile (improved with parallelization)
# - Classification: ~2-4 min per tile (faster with larger chunks)
# - Total: ~18-28 min per tile (significantly faster than single-threaded)
# - ~40-50% faster than single-threaded CPU, ~1.5-2x slower than GPU
#
# CPU CONFIGURATION RECOMMENDATIONS (OPTIMIZED):
# - num_workers: Set to 75-85% of available CPU cores (currently 8)
#   * 8-core CPU: num_workers = 6-8 ‚úÖ CURRENT
#   * 12-core CPU: num_workers = 10-12
#   * 16-core CPU: num_workers = 12-14
# - chunk_size: 10M points for high-RAM systems (currently 10M)
#   * If <32GB RAM: reduce to 3-4M
#   * If 32-48GB RAM: use 5-7M
#   * If >64GB RAM: use 10-15M ‚úÖ CURRENT
# ============================================================================

config_version: "6.7.4-cpu"
preset_name: "asprs_facade_enhanced_v674_cpu"

# ============================================================================
# PROCESSOR CONFIGURATION - CPU OPTIMIZED
# ============================================================================
processor:
  lod_level: "ASPRS"
  processing_mode: "both"
  output_format: "laz"

  # Performance - CPU MODE
  use_gpu: false # CPU processing

  # üî• CPU-OPTIMIZED CHUNKING for memory management - INCREASED FOR MORE RAM
  chunk_size: 10_000_000 # ‚úÖ OPTIMIZED: Increased to 10M for better CPU throughput with high RAM

  # Parallel processing - CPU MODE - OPTIMIZED FOR MULTI-CORE
  num_workers: 1 # Utilize CPU cores (1 worker for better parallelization)

  # Patch generation
  patch_size: 50.0
  num_points: 24576
  overlap: 0.1

# ============================================================================
# PREPROCESSING CONFIGURATION
# ============================================================================
preprocess:
  enabled: true
  sor_k: 12
  sor_std: 2.0
  ror_radius: 1.0
  ror_neighbors: 4
  voxel_enabled: false
  voxel_size: 0.1

# ============================================================================
# STITCHING CONFIGURATION
# ============================================================================
stitching:
  enabled: false
  buffer_size: 10.0
  auto_detect_neighbors: true
  auto_download_neighbors: false
  cache_enabled: true

# ============================================================================
# FEATURES CONFIGURATION
# ============================================================================
features:
  mode: "asprs_classes"

  # Geometric computation
  k_neighbors: 50
  search_radius: 2.5

  # Core features
  compute_normals: true
  compute_curvature: true
  compute_height: true
  compute_geometric: true
  compute_density: true

  # Cluster IDs (ground-truth based, strict polygon containment)
  compute_cluster_id: false # REMOVED: General DBSCAN clustering (not needed)
  compute_building_cluster_id: true # Building IDs (strict, no buffering)
  compute_parcel_cluster_id: true # Parcel IDs (strict, no buffering)

  # Spectral features
  compute_ndvi: true
  use_rgb: true
  use_infrared: true

  # Height computation
  height_method: "dtm"
  use_rge_alti_for_height: true
  compute_height_above_ground: true
  compute_height_local: true

  # RGB/NIR augmentation
  rgb_augmentation:
    enabled: true
    method: "orthophoto"
    resolution: 0.2
    cache_enabled: true

  nir_augmentation:
    enabled: true
    method: "irc"
    resolution: 0.5
    cache_enabled: true

# ============================================================================
# DATA SOURCES CONFIGURATION
# ============================================================================
data_sources:
  rge_alti:
    enabled: true
    use_wcs: true
    resolution: 1.0
    cache_enabled: true
    cache_dir: null
    cache_ttl_days: 90
    prefer_lidar_hd: true
    api_key: "pratique"

  bd_topo:
    enabled: true
    features:
      buildings: true
      roads: true
      water: true
      vegetation: true
      railways: true
      bridges: false
    wfs_url: "https://data.geopf.fr/wfs"
    max_features: 10000
    timeout: 30
    cache_enabled: true
    cache_dir: null
    use_global_cache: false

  cadastre_enabled: true
  bd_foret_enabled: false
  rpg_enabled: false
  orthophoto_rgb: true
  orthophoto_nir: true

ground_truth:
  enabled: true
  method: "auto"
  chunk_size: 10_000_000 # ‚úÖ OPTIMIZED: Increased to 10M for better throughput with high RAM

  # Caching
  cache_dir: null
  cache_ttl_days: 30
  cache_compression: true

  # Processing options
  preclassify: true
  show_progress: true

  # üî• REDUCED DTM AUGMENTATION for memory
  rge_alti:
    augment_ground: true
    augmentation_strategy: "gaps" # CHANGED from "intelligent" to "gaps" (less memory)
    augmentation_spacing: 1.0
    min_distance_to_existing: 0.5
    max_elevation_difference: 6.0

    # Priority areas (simplified for "gaps" strategy)
    augmentation_priority:
      vegetation: true # DISABLED for "gaps" strategy
      buildings: true # DISABLED for "gaps" strategy
      gaps: true
      water: true
      roads: true

    # Validation (less strict for memory)
    validate_against_neighbors: true
    min_neighbors_for_validation: 3 # REDUCED from 4 to 3
    neighbor_search_radius: 10.0 # REDUCED from 12m to 10m

    # Classification
    synthetic_ground_class: 2
    mark_as_synthetic: true

    # üéØ IMPROVED HEIGHT COMPUTATION for classification
    use_for_height_computation: true # NEW: Use RGE ALTI for height_above_ground
    height_computation_resolution: 1.0 # NEW: 1m resolution for accurate heights
    cache_height_grids: true # NEW: Cache computed height grids

  # BD TOPO configuration (same as asprs_complete.yaml)
  bd_topo:
    enabled: true
    path: "./data/ground_truth/BDTOPO/"
    assign_building_cluster_ids: true
    assign_parcel_cluster_ids: true

    cadastre:
      enabled: true
      path: "./data/ground_truth/cadastre/"
      parcel_file: "PARCELLE.shp"

    features:
      buildings:
        enabled: true
        file: "BATIMENT.shp"

        # üè¢ ENHANCED BUILDING DETECTION PARAMETERS v6.7 + v3.0.3
        buffer_distance: 4 # üî• INCREASED: Larger base buffer for better facade capture (was 1.0)
        use_extended_classes: true
        extrude_3d: true
        height_field: "hauteur"
        height_fallback: 6.0
        height_min: 0.5 # üî• v6.7 LOWERED: Catch very low buildings/facades (was 2.0, down from 2.5)
        height_max: 200.0

        # üéØ ADAPTIVE BUFFER - CRITICAL FOR FACADES v6.7
        enable_adaptive_buffer: true
        adaptive_buffer_min: 1.5 # üî• INCREASED: Larger min for missing facades (was 1.0)
        adaptive_buffer_max: 12.0 # üî• v3.0.2 INCREASED: Expanded max for better coverage (was 10.0)

        # üÜï v3.0.3 GEOMETRIC TRANSFORMATIONS - ADAPTIVE FACADE DETECTION
        # Automatically adjusts facade geometry to capture oblique/scaled facades
        enable_rotation: true # Detect and apply optimal rotation (¬±15¬∞) for better alignment
        max_rotation_degrees: 15.0 # Maximum rotation angle for facade adaptation
        enable_scaling: true # Adaptive scaling to match actual facade extent
        max_scale_factor: 1.5 # Maximum scale factor (67%-150% of original length)

        # üÜï v3.0.3 EDGE DETECTION - IDENTIFY FACADE BOUNDARIES
        # Detects high-curvature points at facade edges for precise classification
        enable_edge_detection: true # Enable detection of facade border/edge points
        edge_detection_threshold: 0.3 # Curvature threshold (lower = more edges detected)
        edge_expansion_radius: 0.5 # Radius to expand around detected edges (meters)

        # üÜï v3.0.4 BUGFIX: Ground filtering to prevent ground misclassification
        # Critical: Uses is_ground feature to filter ground points from facades
        use_ground_filter: true # ‚úÖ ENABLED: Filter ground points using is_ground feature
        ground_height_tolerance: 0.5 # üî• v3.0.4 TIGHTENED: Stricter ground filtering (was 2.0)

        # üß± WALL/FACADE DETECTION v6.7 + v3.0.4 - ENHANCED FOR MISSING FACADES
        wall_verticality_threshold: 0.30 # üî• v3.0.4 MAINTAINED: Permissive for textured facades
        missing_wall_threshold: 0.08 # üî• LOWERED: More aggressive expansion (was 0.12)
        vertical_buffer: 1.5 # üî• INCREASED: Larger vertical tolerance (was 1.2)
        horizontal_buffer_ground: 5.0 # üî• v3.0.2 INCREASED: Larger ground buffer (was 4.0)
        horizontal_buffer_upper: 5.0 # üî• v3.0.2 INCREASED: Larger upper buffer for balconies/overhangs (was 4.5)

        # üèóÔ∏è ADVANCED FACADE DETECTION
        detect_setbacks: true
        detect_overhangs: true
        enable_3d_hull_expansion: true
        overhang_max_distance: 12.0 # üî• INCREASED: Even larger overhang detection (was 9.0)
        roof_horizontal_expansion: 6.5 # üî• INCREASED: Larger roof expansion for facades (was 5.0)

        # üî∫ ALPHA SHAPE for complex facades
        enable_alpha_shape: true
        alpha_value: 4.5 # üî• INCREASED: More aggressive shape detection for missing facades (was 3.5)

        # üß± WALL-SPECIFIC DETECTION v6.7 - CRITICAL FOR FACADES
        wall_detection_enabled: true
        min_wall_height: 0.5 # üî• v6.7 LOWERED: Catch very low walls/facades (was 1.2, down from 1.5)
        max_wall_thickness: 2.0 # üî• INCREASED: Thicker walls for better capture (was 1.5)
        wall_normal_tolerance: 0.40 # üî• RELAXED: Allow more variation in wall normals (was 0.30)

        # üè¢ FLOOR SEGMENTATION
        enable_floor_segmentation: true
        floor_height: 3.0
        min_floor_points: 100

        # üîç GAP DETECTION v6.7 (for facades) - ENHANCED
        enable_gap_detection: true
        gap_detection_resolution: 120 # üî• v6.7 INCREASED: Higher resolution for missing facades (was 96)
        gap_detection_band_width: 5.5 # üî• v6.7 INCREASED: Wider band to search further (was 4.0)
        gap_min_points_per_sector: 5 # üî• LOWERED: More sensitive to sparse facades (was 8)
        gap_significant_threshold: 0.05 # üî• LOWERED: More aggressive gap detection (was 0.08)

      roads:
        enabled: true
        file: "TRONCON_DE_ROUTE.shp"

        # üõ£Ô∏è ROAD DETECTION - ENHANCED TO AVOID HIGH POINTS
        buffer_distance: 1.5 # IMPROVED: Larger buffer (was 1.2)
        classification_method: "surface_type"

        # Width-based classification
        use_width_field: true
        width_field: "largeur"
        width_field_alt: "largeur_de_chaussee"
        width_fallback: 4.5
        width_min: 2.0
        width_max: 50.0
        width_multiplier: 0.65 # IMPROVED: Slightly larger (was 0.6)

        # üéØ HEIGHT-BASED FILTERING (NEW)
        enable_height_filtering: true
        max_height_above_ground: 0.5 # CRITICAL: Only near-ground points
        exclude_elevated_points: true # Exclude trees, buildings above roads
        min_height_above_ground: -0.5 # Allow slight depressions

        # üå≥ VEGETATION EXCLUSION (NEW)
        exclude_vegetation: true
        max_ndvi_for_road: 0.15 # Exclude vegetated areas

        # üè¢ BUILDING EXCLUSION (NEW)
        exclude_buildings: true
        min_distance_to_building: 0.5 # Keep away from building edges

        # üåâ BRIDGE DETECTION (NEW)
        detect_bridges: true
        bridge_height_threshold: 2.0 # Points above this = bridge
        bridge_planarity_min: 0.75 # Bridges are planar

      vegetation:
        enabled: true
        files: ["ZONE_DE_VEGETATION.shp", "HAIE.shp"]
        height_based_classification: true
        buffer_distance: 0.3

      water:
        enabled: true
        files: ["SURFACE_HYDROGRAPHIQUE.shp", "COURS_D_EAU.shp"]
        buffer_distance: 2.5

      railways:
        enabled: true
        file: "TRONCON_DE_VOIE_FERREE.shp"

      bridges:
        enabled: true
        file: "PONT.shp"

    use_extended_classes: true
    cache_enabled: true
    use_spatial_index: true

# ============================================================================
# CLASSIFICATION CONFIGURATION - PRECISION ENHANCED
# ============================================================================
classification:
  mode: "asprs"
  normalize_classes: true
  strict_normalization: false

  # üÜï 3D VOLUMETRIC CLASSIFICATION - CRITICAL FOR FACADES
  use_3d_bboxes: true # ‚úÖ NEW: Enable 3D bounding box classification
  enable_3d_volumetric_classification: true # Use height constraints for buildings

  # 3D Extrusion parameters (for Building3DExtruder)
  extrusion_3d:
    enable_adaptive_buffer: true
    adaptive_buffer_min: 1.5 # Minimum lateral buffer (meters)
    adaptive_buffer_max: 10.0 # Maximum lateral buffer for missing facades
    wall_verticality_threshold: 0.35 # Match facade config (lowered for textured walls)
    missing_wall_threshold: 0.30 # Flag buildings with <30% wall coverage
    enable_floor_segmentation: true # Segment by floors for better classification
    enable_3d_hull_expansion: true # Detect roof overhangs
    overhang_max_distance: 12.0 # Maximum overhang distance
    roof_horizontal_expansion: 6.5 # Roof expansion for facades
    enable_gap_detection: true # Detect perimeter gaps
    gap_detection_resolution: 120 # High resolution (matches config)
    gap_detection_band_width: 5.5 # Wide band to find missing walls
    min_building_height: 0.5 # Match facade config (very low walls)
    vertical_buffer: 1.5 # Vertical tolerance

  height_classification:
    enabled: true
    low_vegetation_max: 0.5
    medium_vegetation_max: 2.0
    high_vegetation_min: 2.0

  ndvi_classification:
    enabled: true
    vegetation_threshold: 0.3
    strong_vegetation_threshold: 0.5

    thresholds:
    ground:
      max_height_above_ground: 0.25 # IMPROVED: More strict (was 0.3)
      # ‚ùå DISABLED: planarity causes dash/line artifacts
      # min_planarity: 0.88
      # min_horizontality: 0.85    # üéØ ROAD THRESHOLDS - CRITICAL: GROUND-LEVEL ONLY
    roads:
      # Height: STRICT filtering - ONLY ground-level points (no elevated)
      min_height_above_ground: -0.5 # Allow slight depressions
      max_height_above_ground: 0.3 # üî• STRICT: Only near-ground (trees/buildings excluded)
      enforce_ground_level: true # üÜï CRITICAL: Force ground-level restriction

      # Geometric: Roads are smooth and flat
      # ‚ùå DISABLED: planarity/horizontality cause dash/line artifacts
      # min_planarity: 0.80
      # min_horizontality: 0.90
      max_roughness: 0.04 # IMPROVED: Smoother surfaces (was 0.05)
      max_curvature: 0.05 # Exclude complex curved surfaces

      # Vegetation exclusion
      max_ndvi: 0.15 # IMPROVED: Exclude vegetation
      max_verticality: 0.25 # Exclude vertical structures (walls, trees)

    # üè¢ BUILDING THRESHOLDS v6.7 - ENHANCED FACADE DETECTION
    buildings:
      # Height requirements v6.7
      min_height: 0.5 # üî• v6.7 LOWERED: Catch low walls/annexes/facades (was 2.0)
      min_height_strict: 2.5 # Extra strict for urban buildings
      max_height: 150.0 # Reasonable maximum building height

      # Wall/facade detection v6.7 - CRITICAL FOR FACADES
      min_verticality: 0.35 # üî• v6.7 MAINTAINED: Catch semi-vertical facades (was 0.45)
      min_verticality_strict: 0.50 # üî• v6.7 MAINTAINED: Less strict for textured walls (was 0.60)
      min_wall_verticality: 0.50 # üî• v6.7 LOWERED: Walls can be less vertical (was 0.55, down from 0.65)
      max_wall_planarity: 0.60 # üî• INCREASED: Allow less planar textured walls (was 0.50)
      min_wall_points: 35 # üî• LOWERED: Require fewer points for sparse facades (was 50)
      wall_to_roof_ratio: 0.20 # üî• LOWERED: Adjust balance for missing facades (was 0.25)

      # Roof detection
      min_roof_planarity: 0.70 # IMPROVED: Higher planarity (was 0.65)
      min_roof_planarity_strict: 0.80 # Extra strict for flat roofs
      max_roof_curvature: 0.12 # IMPROVED: Less curvature allowed (was 0.15)
      max_roof_verticality: 0.30 # NEW: Roofs should not be vertical

      # Facade-specific thresholds v6.7 - CRITICAL IMPROVEMENTS
      facade_detection_enabled: true # NEW: Enable dedicated facade detection
      min_facade_height: 0.5 # üî• v6.7 LOWERED: Catch very low facades (was 1.2, down from 1.5)
      min_facade_verticality: 0.35 # üî• v6.7 LOWERED: Even more permissive for textured facades (was 0.40, down from 0.50)
      facade_thickness_max: 1.5 # üî• INCREASED: Allow thicker walls (was 1.2)
      facade_continuity_min: 0.4 # üî• LOWERED: Less strict for broken facades (was 0.5)

      # Building context v6.7 - NDVI FILTERING
      max_ndvi: 0.25 # üî• v6.7 INCREASED: More tolerant vegetation filter (was 0.22, up from 0.20)
      building_buffer_expansion: 6 # üî• INCREASED: Expand polygons more (was 5)

    # üå≥ VEGETATION THRESHOLDS - ENHANCED v6.7+
    vegetation:
      # NDVI thresholds (multi-level vegetation classification)
      min_ndvi: 0.25 # üî• LOWERED: Catch sparse vegetation (was 0.3)
      min_ndvi_strong: 0.50 # NEW: Strong vegetation (healthy trees)
      min_ndvi_dense: 0.60 # NEW: Dense forest canopy

      # Geometric thresholds for vegetation structure
      # ‚ùå DISABLED: planarity causes dash/line artifacts
      # max_planarity: 0.55
      max_verticality: 0.35 # üî• LOWERED: Vegetation is not vertical (was 0.4)
      min_roughness: 0.08 # üÜï NEW: Vegetation has high surface roughness

      # Curvature thresholds - CRITICAL FOR VEGETATION vs BUILDINGS
      min_curvature: 0.15 # üÜï NEW: Vegetation has high curvature (irregular surfaces)
      max_curvature_buildings: 0.10 # üÜï NEW: Buildings are smooth (low curvature)
      use_curvature_filtering: true # üÜï NEW: Enable curvature-based filtering

      # Height-based sub-classification
      min_height_high_veg: 2.5 # INCREASED: Higher threshold for high veg (was 2.0)
      min_height_medium_veg: 0.5 # NEW: Medium vegetation minimum
      max_height_low_veg: 0.8 # NEW: Low vegetation maximum

      # Density thresholds
      min_density: 5.0 # NEW: Points per cubic meter (vegetation is dense)
      max_density_canopy: 200.0 # NEW: Maximum for tree canopies

    water:
      min_height_above_ground: -0.5
      max_height_above_ground: 0.25 # IMPROVED: Tighter range (was 0.3)
      # ‚ùå DISABLED: planarity causes dash/line artifacts
      # min_planarity: 0.85
      max_ndvi: 0.15 # IMPROVED: Lower NDVI (was 0.2)

    # üåâ BRIDGE/ELEVATED STRUCTURE THRESHOLDS
    bridges:
      enabled: true # NEW: Enable bridge detection
      min_height_above_ground: 2.0 # Minimum height for bridges
      max_height_above_ground: 15.0 # Maximum reasonable bridge height
      # ‚ùå DISABLED: planarity/horizontality cause dash/line artifacts
      # min_planarity: 0.75
      # min_horizontality: 0.85
      require_road_alignment: true # Must align with road network

# ============================================================================
# RECLASSIFICATION - ENHANCED PRECISION v6.7+
# ============================================================================
reclassification:
  enabled: true
  use_geometric_rules: true
  use_ndvi_classification: true
  use_spectral_rules: true
  use_clustering: true

  # üÜï 3D BBOX RECLASSIFICATION - CRITICAL FOR FACADES
  use_3d_bbox_reclassification: true # ‚úÖ NEW: Apply 3D volumetric constraints
  preserve_3d_classified_points: true # Don't overwrite 3D-classified facades

  # üÜï ENHANCED RULE ORDERING - CRITICAL FOR QUALITY
  rule_execution_order:
    # Order matters! Earlier rules have priority
    - "3d_volumetric" # FIRST: Use 3D bboxes for buildings (most reliable)
    - "water" # Water bodies (high confidence from GT)
    - "ndvi_refinement" # NDVI-based vegetation (before geometric rules)
    - "vegetation_refinement" # üÜï NEW: Advanced vegetation with curvature
    - "road_vegetation_disambiguation" # Fix road/vegetation overlap
    - "building_buffer_zone" # Expand buildings to nearby vertical points
    - "verticality_buildings" # Classify vertical points as buildings
    - "spectral_classification" # RGB/NIR spectral signatures
    - "height_based_refinement" # Height-based rules (last)

  # üéØ ENHANCED THRESHOLDS v6.7+ for better precision
  # üå≥ VEGETATION NDVI THRESHOLDS (Multi-level)
  ndvi_vegetation_threshold: 0.30 # Base threshold for vegetation detection
  ndvi_sparse_vegetation: 0.20 # üÜï NEW: Sparse vegetation (grass in shade)
  ndvi_grass_threshold: 0.30 # Grass and low vegetation
  ndvi_moderate_vegetation: 0.40 # üÜï NEW: Moderate vegetation (shrubs)
  ndvi_healthy_trees: 0.50 # Healthy trees and dense shrubs
  ndvi_dense_forest: 0.60 # Dense forest canopy

  # Non-vegetation thresholds
  ndvi_road_threshold: 0.12 # Roads and impervious surfaces
  ndvi_building_max: 0.25 # Buildings (more tolerant near vegetation)

  # NIR thresholds
  nir_vegetation_threshold: 0.45 # Vegetation in NIR band
  nir_building_threshold: 0.25 # Buildings in NIR band

  # üÜï CURVATURE-BASED VEGETATION DETECTION
  curvature_vegetation_detection:
    enabled: true # Enable curvature-based vegetation classification
    min_curvature_vegetation: 0.12 # Minimum curvature for vegetation (irregular)
    max_curvature_buildings: 0.08 # Maximum curvature for buildings (smooth)
    max_curvature_roads: 0.05 # Maximum curvature for roads (very smooth)
    curvature_weight: 0.3 # Weight in combined scoring (30%)

  # Clustering parameters
  spatial_cluster_eps: 0.5
  min_cluster_size: 10

  # Confidence thresholds v6.7
  min_classification_confidence: 0.20 # üî• v6.7+ LOWERED: Even more permissive for facades (was 0.25)
  rejection_confidence_threshold: 0.35 # üî• INCREASED: Less aggressive rejection (was 0.30)

  # üî• HEIGHT-BASED RECLASSIFICATION RULES (Enhanced v6.7+)
  height_based_refinement:
    enabled: true

    # Elevated points cannot be roads (except bridges)
    reclassify_elevated_roads:
      enabled: true
      max_road_height: 0.3 # üî• CRITICAL: Points above this CANNOT be roads (ground-level only)
      min_bridge_height: 2.0 # Points above this are bridges
      check_bridge_alignment: true
      strict_height_enforcement: true # üÜï Force strict ground-level check

    # High points with NDVI are vegetation (ENHANCED with curvature)
    reclassify_high_ndvi_to_vegetation:
      enabled: true
      min_height: 1.5 # ‚úÖ PHASE 2: Increased from 0.5m to prevent low vegetation on roads
      min_ndvi: 0.20 # With this NDVI = vegetation

      # üÜï CURVATURE REFINEMENT - Helps distinguish vegetation from smooth surfaces
      use_curvature_check: true # Enable curvature-based validation
      min_curvature: 0.10 # Vegetation has higher curvature than buildings/roads
      # ‚ùå DISABLED: planarity causes dash/line artifacts
      # max_planarity: 0.60

      # Multi-level NDVI classification
      ndvi_levels:
        sparse: 0.20 # Sparse vegetation in shadows
        grass: 0.30 # Grass and low vegetation
        moderate: 0.40 # Shrubs and moderate vegetation
        healthy: 0.50 # Healthy trees
        dense: 0.60 # Dense forest canopy

      # Height-based sub-classification
      height_thresholds:
        low_veg_max: 0.8 # Below this = low vegetation
        medium_veg_min: 0.5 # Above this and below high = medium
        high_veg_min: 2.5 # Above this = high vegetation

    # üÜï ENHANCED: Vertical points near buildings are facades v6.7+
    reclassify_vertical_to_building:
      enabled: true
      min_verticality: 0.25 # üî• v6.7+ Catch semi-vertical facades (was 0.30)
      max_distance_to_building: 6.0 # üî• v6.7+ INCREASED: Search even further (was 4.5)
      min_height: 0.5 # üî• v6.7 Catch very low facades/walls
      max_ndvi: 0.28 # üî• v6.7+ INCREASED: More tolerant (was 0.25)
      use_3d_distance: true # üÜï NEW: Use 3D distance to building volumes
      prefer_3d_bbox_classification: true # üÜï NEW: Prefer 3D bbox over rule-based

  # üå≥ ADVANCED VEGETATION RECLASSIFICATION (NEW v6.7+)
  vegetation_refinement:
    enabled: true # Enable advanced vegetation detection

    # Combine multiple features for robust vegetation detection
    use_multi_feature_scoring: true # Combine NDVI, curvature, roughness, planarity

    # Feature weights for vegetation scoring (must sum to 1.0)
    feature_weights:
      ndvi: 0.40 # NDVI is strongest indicator (40%)
      curvature: 0.25 # Curvature distinguishes irregular vegetation (25%)
      roughness: 0.20 # Surface roughness (20%)
      planarity: 0.15 # Low planarity for vegetation (15%)

    # Vegetation detection thresholds
    vegetation_score_threshold: 0.65 # Combined score > 0.65 = vegetation
    strong_vegetation_threshold: 0.75 # High confidence vegetation

    # Misclassification correction
    correct_building_to_vegetation:
      enabled: true # Reclassify buildings with vegetation features
      min_ndvi: 0.45 # Strong vegetation signal
      min_curvature: 0.15 # High surface irregularity
      # ‚ùå DISABLED: planarity causes dash/line artifacts
      # max_planarity: 0.50
      min_roughness: 0.10 # Rough surface texture

    correct_road_to_vegetation:
      enabled: true # Reclassify roads with vegetation features
      min_ndvi: 0.35 # Moderate vegetation signal
      min_curvature: 0.12 # Some irregularity
      min_height: 0.3 # Slightly elevated (not road surface)
      # ‚ùå DISABLED: planarity causes dash/line artifacts
      # max_planarity: 0.70

    # Distinguish vegetation types by structure
    vegetation_type_classification:
      enabled: true # Sub-classify vegetation types

      # Low vegetation (grass, low shrubs)
      low_vegetation:
        max_height: 0.8
        min_ndvi: 0.25
        max_curvature: 0.20 # Relatively smooth
        min_roughness: 0.05

      # Medium vegetation (shrubs, young trees)
      medium_vegetation:
        min_height: 0.5
        max_height: 2.5
        min_ndvi: 0.30
        min_curvature: 0.12
        min_roughness: 0.08

      # High vegetation (mature trees)
      high_vegetation:
        min_height: 2.5
        min_ndvi: 0.35
        min_curvature: 0.15
        min_roughness: 0.10
        # ‚ùå DISABLED: planarity causes dash/line artifacts
        # max_planarity: 0.55

    # Protect certain classes from vegetation reclassification
    protected_classes:
      - water # Don't reclassify water as vegetation
      - buildings_3d # Don't override 3D volumetric classification

    # Spatial filtering
    apply_spatial_filtering: true
    min_vegetation_cluster_size: 10 # Minimum points for vegetation cluster
    vegetation_neighbor_radius: 1.0 # Check neighbors within 1m
    min_vegetation_neighbors: 5 # Need 5+ vegetation neighbors

  # üî• CONFLICT RESOLUTION PRIORITIES (Enhanced v6.7+)
  class_priority_order:
    # Higher priority = resolved first
    # üÜï Modified order to prioritize 3D-classified buildings
    - water # Priority 1: Water bodies (most certain from GT)
    - buildings_3d # Priority 2: Buildings from 3D volumetric classification (NEW)
    - buildings # Priority 3: Buildings from 2D classification
    - bridges # Priority 4: Bridges (elevated roads)
    - roads # Priority 5: Roads (ground level)
    - vegetation # Priority 6: Vegetation (fills gaps)
    - ground # Priority 7: Ground (default)

  # üî• POST-PROCESSING FILTERS (Enhanced v6.7+)
  post_processing:
    enabled: true

    # üÜï ENHANCED: Remove isolated misclassifications
    remove_isolated_points:
      enabled: true
      min_cluster_size: 8 # Increased from 5 for stricter filtering
      apply_to_classes: ["roads", "buildings", "water", "vegetation"]
      use_3d_clustering: true # üÜï NEW: Consider height in clustering
      height_tolerance: 2.0 # üÜï NEW: Points within 2m height are same cluster

    # üÜï ENHANCED: Smooth class boundaries
    smooth_boundaries:
      enabled: true
      kernel_size: 5 # Increased from 3 for smoother boundaries
      iterations: 3 # Increased from 2 for better smoothing
      preserve_building_edges: true # üÜï NEW: Don't smooth facades

    # üÜï ENHANCED: Enforce spatial coherence
    spatial_coherence:
      enabled: true
      neighborhood_radius: 1.5 # Increased from 1.0 for larger context
      min_neighbor_agreement: 0.65 # Increased from 0.6 for stricter coherence
      apply_to_unclassified_only: false # Apply to all classes
      preserve_3d_classifications: true # üÜï NEW: Don't modify 3D bbox results

# ============================================================================
# OUTPUT CONFIGURATION
# ============================================================================
output:
  format: "laz"
  save_patches: true # ‚ú® REQUIRED for patch generation in "both" mode
  extra_dims:
    # ‚ö†Ô∏è NOTE: planarity/horizontality computed but NOT used in classification rules (cause artifacts)
    - planarity
    - linearity
    - sphericity
    - verticality
    - horizontality
    - curvature
    - density
    - height
    - height_above_ground
    - height_local
    - ndvi
    - nir_intensity
    # cluster_id removed - general DBSCAN clustering not needed
    - building_cluster_id # Building IDs from ground truth (strict containment)
    - parcel_cluster_id # Parcel IDs from cadastre (strict containment)
    - is_synthetic

  save_classification: true
  save_confidence_scores: false
  include_metadata: true
  metadata_format: "json"

# ============================================================================
# MONITORING & LOGGING - CPU MODE
# ============================================================================
monitoring:
  enabled: true
  log_level: "INFO"
  track_memory: true
  track_gpu_usage: false # Disabled for CPU mode
  track_processing_time: true
  progress_interval: 10
  compute_statistics: true
  save_statistics: true
  statistics_output: "processing_stats.json"

# ============================================================================
# CACHE CONFIGURATION
# ============================================================================
cache:
  enabled: true
  cache_dir: "./cache"
  cache_features: false
  cache_ground_truth: true
  cache_rgb: true
  cache_nir: true
  cache_dtm: true
  ground_truth_ttl_days: 180
  rgb_ttl_days: 365
  nir_ttl_days: 365
  dtm_ttl_days: 365

# ============================================================================
# VALIDATION & QUALITY CONTROL
# ============================================================================
validation:
  enabled: true
  check_point_density: true
  min_points_per_tile: 100_000
  check_feature_range: true
  flag_invalid_features: true
  check_class_distribution: true
  warn_on_high_unclassified: true
  max_unclassified_percentage: 15
  check_output_completeness: true
  verify_extra_dims: true
# ============================================================================
# USAGE NOTES - CPU OPTIMIZED VERSION v6.7.4
# ============================================================================
#
# VERSION: 6.7.4-cpu - FACADE ENHANCED + BUGFIXES (CPU)
# CPU-OPTIMIZED CONFIGURATION WITH v6.7 FACADE IMPROVEMENTS + v3.0.4 BUGFIXES
#
# üêõ v3.0.4 FACADE CLASSIFICATION BUGFIXES:
# Critical stability and quality improvements:
# 1. Feature validation: Sanitize NaN/Inf before use (prevents crashes)
# 2. Ground filtering: Consistent valid_mask usage (no ground in facades)
# 3. Edge detection: Secure curvature validation (no NaN artifacts)
# 4. Spatial validation: Edge expansion limited to polygons (no false positives)
# 5. Roof classification: Feature validation before processing (stable results)
#
# Expected improvements:
# - 100% crash prevention (no more NaN/Inf errors)
# - ~30-40% reduction in classification errors
# - +10-15% facade precision
# - +5-10% roof precision
# - More stable and predictable results
#
# üÜï v6.7 FACADE CLASSIFICATION IMPROVEMENTS:
# Based on real-world validation, significant improvements to building facade detection:
# 1. Lower verticality thresholds: 0.70 ‚Üí 0.55 (code), 0.45 ‚Üí 0.35 (config)
# 2. Lower height minimums: 1.5m ‚Üí 0.5m (captures low walls and annexes)
# 3. Larger initial buffers: 2.0m ‚Üí 2.5m (better facade point capture)
# 4. Extended adaptive buffers: max 8m ‚Üí 10m (deeper facade search)
# 5. Relaxed confidence: 0.35 ‚Üí 0.25 (accepts more uncertain facades)
# 6. Improved NDVI tolerance: 0.20 ‚Üí 0.25 (handles vegetation near buildings)
#
# üî• CPU CONFIGURATION PARAMETERS:
# 1. use_gpu: false - CPU processing mode
# 2. num_workers: 1 - Single-threaded (set higher for parallel processing)
# 3. chunk_size: 5M points - Optimal CPU batch size
# 4. track_gpu_usage: false - No GPU monitoring
#
# üíª CPU WORKER TUNING GUIDE:
# Set num_workers based on available CPU cores:
# - 4-core CPU: num_workers = 3-4
# - 6-core CPU: num_workers = 5-6
# - 8-core CPU: num_workers = 6-8 (recommended)
# - 12-core CPU: num_workers = 10-12
# - 16+ core CPU: num_workers = 12-16
#
# Rule of thumb: Use 75-85% of total cores to leave headroom for OS/other tasks
#
# üéØ MEMORY TUNING (OPTIMIZED):
# Configuration optimized for high-RAM systems:
# - <32GB RAM: chunk_size = 3_000_000, num_workers = 4
# - 32-48GB RAM: chunk_size = 5_000_000, num_workers = 6
# - 48-64GB RAM: chunk_size = 8_000_000, num_workers = 8
# - >64GB RAM: chunk_size = 10_000_000, num_workers = 8 ‚úÖ CURRENT
#
# ‚è±Ô∏è EXPECTED PERFORMANCE (CPU OPTIMIZED MODE):
# System: 8-core CPU, 64GB+ RAM, 18M point tile
# - Feature computation: ~12-18 min
# - DTM augmentation: ~1-2 min
# - Ground truth: ~3-4 min (parallel processing, larger chunks)
# - Classification: ~2-3 min (faster with 10M chunks)
# - Total: ~18-28 min per tile (40% faster than default CPU config)
#
# Comparison to GPU (RTX 4080):
# - CPU is ~2-3x slower overall
# - No VRAM limitations
# - Better for systems without powerful GPU
# - Can process larger tiles with sufficient RAM
#
# üè¢ FACADE DETECTION v6.7 + v3.0.4 (improved stability and precision):
# 1. Lateral buffers: 1.5-10.0m - capture facades/courtyards (optimized from 12m)
# 2. Verticality: 0.30-0.55 - catch textured/semi-vertical walls (v3.0.4 stable)
# 3. Gap detection: 120 resolution, 5.5m band - find missing walls (up from 96/4.0m)
# 4. Height thresholds: 0.5m min - include very low walls/annexes (down from 1.5m)
# 5. NDVI filtering: max 0.25 - tolerant to nearby vegetation (up from 0.20)
# 6. Search radius: 4.0m - find facades outside polygons (up from 3.5m)
# 7. Initial buffer: 2.5m - wider initial capture zone (up from 2.0m)
# 8. Ground filtering: 0.5m tolerance - strict ground exclusion (v3.0.4 fix)
# 9. Feature validation: NaN/Inf sanitization - stable edge detection (v3.0.4 fix)
# 10. Spatial validation: Polygon-based expansion - no false positives (v3.0.4 fix)
#
# USAGE (OPTIMIZED FOR HIGH-RAM SYSTEMS):
#   ign-lidar-hd process \
#     -c examples/production/asprs_memory_optimized.yaml \
#     input_dir="/data/lidar/tiles" \
#     output_dir="/data/output_v6.7.4_cpu_optimized"
#
# NOTE: This configuration requires 64GB+ RAM for optimal performance
# v3.0.4 provides significantly more stable and reliable results
#
# PARALLEL PROCESSING NOTE:
# The library will automatically use scikit-learn's joblib for parallel
# CPU processing. KD-tree construction and feature computation will be
# parallelized across the specified num_workers.
#
# WHEN TO USE CPU VERSION:
# - No GPU available or GPU has <8GB VRAM
# - System has good CPU (8+ cores recommended)
# - Sufficient RAM (32GB+)
# - Processing time is not critical
# - Batch processing overnight
#
# WHEN TO USE GPU VERSION:
# - GPU with 12GB+ VRAM available (RTX 3080+, RTX 4080+)
# - Need faster processing (2-3x speedup)
# - Real-time or interactive processing
# - Large production runs
#
# OPTIMIZATION TIPS (HIGH-RAM SYSTEM):
# 1. Increase num_workers to 10-12 if you have 12+ cores
# 2. Increase chunk_size to 15M if you have >128GB RAM
# 3. Monitor with htop/top during processing (aim for 60-70% RAM usage)
# 4. Use cache_enabled: true to avoid reprocessing
# 5. Can process 2-3 tiles in parallel with 128GB+ RAM
#
# TROUBLESHOOTING:
# If processing too slow:
# 1. Increase num_workers (up to CPU core count)
# 2. Consider GPU version if available
#
# If out of memory (unlikely with this config on 64GB+ systems):
# 1. Reduce chunk_size to 7M or 5M
# 2. Reduce num_workers to 4-6
# 3. Disable DTM augmentation (augment_ground: false)
# 4. Check for memory leaks or other processes consuming RAM
#
# If facades still missing (after v6.7 + v3.0.4 improvements, should be very rare):
# 1. Increase adaptive_buffer_max to 12m (from 10m)
# 2. Lower min_verticality to 0.25 (from 0.30)
# 3. Increase gap_detection_band_width to 6.5m (from 5.5m)
# 4. Lower min_facade_height to 0.3m (from 0.5m)
# 5. Check point density (<5 pts/m¬≤ problematic)
#
# For comparison with v6.6 results:
# - v6.7.4 should show significantly more green (building) points
# - Facades outlined in white should now be classified correctly
# - Less blue misclassification in building areas
# - Better contour precision around building edges
# - NO NaN/Inf crashes or artifacts (v3.0.4 fix)
# - More consistent classification across tiles (v3.0.4 fix)
#
# ============================================================================
# ============================================================================

