# ============================================================================
# IGN LiDAR HD - ASPRS Memory-Optimized Configuration v6.3.2
# ============================================================================
# MEMORY-OPTIMIZED VERSION - For systems with limited RAM (28-32GB)
#
# Based on asprs_complete.yaml but with aggressive memory management:
# 1. Smaller chunk sizes (2M points instead of 5M)
# 2. Disabled multi-scale computation (single scale only)
# 3. Reduced batch sizes
# 4. Less aggressive DTM augmentation
# 5. Streamlined feature set
#
# EXPECTED MEMORY FOOTPRINT:
# - Peak: ~20-24GB (vs ~30-35GB in asprs_complete.yaml)
# - Processing: ~15-18GB average
# - Safe for 28GB+ RAM systems
#
# TRADEOFFS vs asprs_complete.yaml:
# - 40-50% faster processing (no multi-scale overhead)
# - Slightly more artifacts (5-7% vs 2-5%)
# - 92-95% classification rate (vs 94-97%)
# - Still production-quality results
# ============================================================================

config_version: "6.3.2"
preset_name: "asprs_memory_optimized"

# ============================================================================
# PROCESSOR CONFIGURATION
# ============================================================================
processor:
  lod_level: "ASPRS"
  processing_mode: "both"
  output_format: "laz"

  # Performance
  use_gpu: true
  gpu_device: 0
  gpu_batch_size: 15_000_000 # REDUCED from 30M to 15M
  gpu_memory_target: 0.85 # REDUCED from 0.90 to 0.85
  vram_limit_gb: 14

  # ðŸ”¥ AGGRESSIVE CHUNKING for memory management
  chunk_size: 2_000_000 # REDUCED from 5M to 2M points per chunk

  # Parallel processing
  num_workers: 0

  # Patch generation
  patch_size: 50.0
  num_points: 24576
  overlap: 0.1

# ============================================================================
# PREPROCESSING CONFIGURATION
# ============================================================================
preprocess:
  enabled: true
  sor_k: 12
  sor_std: 2.0
  ror_radius: 1.0
  ror_neighbors: 4
  voxel_enabled: false
  voxel_size: 0.1

# ============================================================================
# STITCHING CONFIGURATION
# ============================================================================
stitching:
  enabled: false
  buffer_size: 10.0
  auto_detect_neighbors: true
  auto_download_neighbors: false
  cache_enabled: true

# ============================================================================
# FEATURES CONFIGURATION - SINGLE SCALE (MEMORY OPTIMIZED)
# ============================================================================
features:
  mode: "asprs_classes"

  # Geometric computation
  k_neighbors: 30
  search_radius: 3.0

  # Core features
  compute_normals: true
  compute_curvature: true
  compute_height: true
  compute_geometric: true
  compute_density: true

  # Cluster IDs
  compute_cluster_id: true
  compute_building_cluster_id: true
  compute_parcel_cluster_id: true

  # Spectral features
  compute_ndvi: true
  use_rgb: true
  use_infrared: true

  # Height computation
  height_method: "dtm"
  use_rge_alti_for_height: true
  compute_height_above_ground: true
  compute_height_local: true

  # ðŸ”¥ DISABLE MULTI-SCALE to save memory
  multi_scale_computation: false # DISABLED (was true)

  # If you must use multi-scale, use minimal config:
  # scales:
  #   - name: medium
  #     k_neighbors: 30
  #     search_radius: 3.0
  #     weight: 1.0
  # aggregation_method: "weighted_average"  # Simplest aggregation

  # RGB/NIR augmentation
  rgb_augmentation:
    enabled: true
    method: "orthophoto"
    resolution: 0.2
    cache_enabled: true

  nir_augmentation:
    enabled: true
    method: "irc"
    resolution: 0.5
    cache_enabled: true

# ============================================================================
# DATA SOURCES CONFIGURATION
# ============================================================================
data_sources:
  rge_alti:
    enabled: true
    use_wcs: true
    resolution: 1.0
    cache_enabled: true
    cache_dir: null
    cache_ttl_days: 90
    prefer_lidar_hd: true
    api_key: "pratique"

  bd_topo:
    enabled: true
    features:
      buildings: true
      roads: true
      water: true
      vegetation: true
      railways: true
      bridges: false
    wfs_url: "https://data.geopf.fr/wfs"
    max_features: 10000
    timeout: 30
    cache_enabled: true
    cache_dir: null
    use_global_cache: false

  cadastre_enabled: true
  bd_foret_enabled: false
  rpg_enabled: false
  orthophoto_rgb: true
  orthophoto_nir: true

ground_truth:
  enabled: true
  method: "auto"
  chunk_size: 2_000_000 # REDUCED from 5M to 2M

  # Caching
  cache_dir: null
  cache_ttl_days: 30
  cache_compression: true

  # Processing options
  preclassify: true
  show_progress: true

  # ðŸ”¥ REDUCED DTM AUGMENTATION for memory
  rge_alti:
    augment_ground: true
    augmentation_strategy: "gaps" # CHANGED from "intelligent" to "gaps" (less memory)
    augmentation_spacing: 2.0 # INCREASED from 1.0m to 2.0m (fewer points)
    min_distance_to_existing: 0.5
    max_elevation_difference: 6.0

    # Priority areas (simplified for "gaps" strategy)
    augmentation_priority:
      vegetation: false # DISABLED for "gaps" strategy
      buildings: false # DISABLED for "gaps" strategy
      gaps: true
      water: false
      roads: false

    # Validation (less strict for memory)
    validate_against_neighbors: true
    min_neighbors_for_validation: 3 # REDUCED from 4 to 3
    neighbor_search_radius: 10.0 # REDUCED from 12m to 10m

    # Classification
    synthetic_ground_class: 2
    mark_as_synthetic: true

  # BD TOPO configuration (same as asprs_complete.yaml)
  bd_topo:
    enabled: true
    path: "./data/ground_truth/BDTOPO/"
    assign_building_cluster_ids: true
    assign_parcel_cluster_ids: true

    cadastre:
      enabled: true
      path: "./data/ground_truth/cadastre/"
      parcel_file: "PARCELLE.shp"

    features:
      buildings:
        enabled: true
        file: "BATIMENT.shp"
        buffer_distance: 0.8
        use_extended_classes: true
        extrude_3d: true
        height_field: "hauteur"
        height_fallback: 6.0
        height_min: 2.5
        height_max: 200.0
        enable_adaptive_buffer: true
        adaptive_buffer_min: 0.7
        adaptive_buffer_max: 7.5
        wall_verticality_threshold: 0.55
        missing_wall_threshold: 0.2
        vertical_buffer: 0.6
        horizontal_buffer_ground: 1.0
        horizontal_buffer_upper: 1.5
        detect_setbacks: true
        detect_overhangs: true
        enable_3d_hull_expansion: true
        overhang_max_distance: 6.0
        roof_horizontal_expansion: 3.5
        enable_alpha_shape: true
        alpha_value: 2.0
        wall_detection_enabled: true
        min_wall_height: 1.8
        max_wall_thickness: 0.8
        wall_normal_tolerance: 0.25
        enable_floor_segmentation: true
        floor_height: 3.0
        min_floor_points: 100
        enable_gap_detection: true
        gap_detection_resolution: 60
        gap_detection_band_width: 2.0
        gap_min_points_per_sector: 8
        gap_significant_threshold: 0.15

      roads:
        enabled: true
        file: "TRONCON_DE_ROUTE.shp"
        buffer_distance: 1.2
        classification_method: "surface_type"
        use_width_field: true
        width_field: "largeur"
        width_field_alt: "largeur_de_chaussee"
        width_fallback: 4.5
        width_min: 2.0
        width_max: 50.0
        width_multiplier: 0.6

      vegetation:
        enabled: true
        files: ["ZONE_DE_VEGETATION.shp", "HAIE.shp"]
        height_based_classification: true
        buffer_distance: 0.3

      water:
        enabled: true
        files: ["SURFACE_HYDROGRAPHIQUE.shp", "COURS_D_EAU.shp"]
        buffer_distance: 2.5

      railways:
        enabled: true
        file: "TRONCON_DE_VOIE_FERREE.shp"

      bridges:
        enabled: true
        file: "PONT.shp"

    use_extended_classes: true
    cache_enabled: true
    use_spatial_index: true

# ============================================================================
# CLASSIFICATION CONFIGURATION
# ============================================================================
classification:
  mode: "asprs"
  normalize_classes: true
  strict_normalization: false

  height_classification:
    enabled: true
    low_vegetation_max: 0.5
    medium_vegetation_max: 2.0
    high_vegetation_min: 2.0

  ndvi_classification:
    enabled: true
    vegetation_threshold: 0.3
    strong_vegetation_threshold: 0.5

  thresholds:
    ground:
      max_height_above_ground: 0.3
      min_planarity: 0.85
      min_horizontality: 0.8

    roads:
      max_height_above_ground: 0.5
      min_planarity: 0.75
      max_roughness: 0.05

    buildings:
      min_height: 1.2
      min_verticality: 0.50
      min_verticality_strict: 0.65
      min_roof_planarity: 0.65
      max_roof_curvature: 0.15
      min_wall_points: 50
      wall_to_roof_ratio: 0.3

    vegetation:
      min_ndvi: 0.3
      max_planarity: 0.6
      max_verticality: 0.4

    water:
      min_height_above_ground: -0.5
      max_height_above_ground: 0.3
      min_planarity: 0.80
      max_ndvi: 0.2

# ============================================================================
# RECLASSIFICATION
# ============================================================================
reclassification:
  enabled: true
  use_geometric_rules: true
  use_ndvi_classification: true
  use_spectral_rules: true
  use_clustering: true
  ndvi_vegetation_threshold: 0.3
  ndvi_road_threshold: 0.15
  nir_vegetation_threshold: 0.4
  nir_building_threshold: 0.3
  spatial_cluster_eps: 0.5
  min_cluster_size: 10
  min_classification_confidence: 0.35
  rejection_confidence_threshold: 0.25

# ============================================================================
# OUTPUT CONFIGURATION
# ============================================================================
output:
  format: "laz"
  extra_dims:
    - planarity
    - linearity
    - sphericity
    - verticality
    - horizontality
    - curvature
    - density
    - height
    - height_above_ground
    - height_local
    - ndvi
    - nir_intensity
    - cluster_id
    - building_cluster_id
    - parcel_cluster_id
    - is_synthetic

  save_classification: true
  save_confidence_scores: false
  include_metadata: true
  metadata_format: "json"

# ============================================================================
# MONITORING & LOGGING
# ============================================================================
monitoring:
  enabled: true
  log_level: "INFO"
  track_memory: true
  track_gpu_usage: true
  track_processing_time: true
  progress_interval: 10
  compute_statistics: true
  save_statistics: true
  statistics_output: "processing_stats.json"

# ============================================================================
# CACHE CONFIGURATION
# ============================================================================
cache:
  enabled: true
  cache_dir: "./cache"
  cache_features: false
  cache_ground_truth: true
  cache_rgb: true
  cache_nir: true
  cache_dtm: true
  ground_truth_ttl_days: 180
  rgb_ttl_days: 365
  nir_ttl_days: 365
  dtm_ttl_days: 365

# ============================================================================
# VALIDATION & QUALITY CONTROL
# ============================================================================
validation:
  enabled: true
  check_point_density: true
  min_points_per_tile: 100_000
  check_feature_range: true
  flag_invalid_features: true
  check_class_distribution: true
  warn_on_high_unclassified: true
  max_unclassified_percentage: 15
  check_output_completeness: true
  verify_extra_dims: true
# ============================================================================
# USAGE NOTES
# ============================================================================
#
# USAGE:
#   ign-lidar-hd process \
#     -c examples/production/asprs_memory_optimized.yaml \
#     input_dir="/data/lidar/tiles" \
#     output_dir="/data/output_memory_opt"
#
# MEMORY OPTIMIZATIONS:
# 1. Single-scale computation (no multi-scale overhead)
# 2. Smaller chunks: 2M points (vs 5M)
# 3. Reduced batch: 15M points (vs 30M)
# 4. DTM gaps-only strategy (vs intelligent)
# 5. 2m DTM grid (vs 1m) = 75% fewer synthetic points
#
# PERFORMANCE vs asprs_complete.yaml:
# - Memory: ~20-24GB peak (vs ~30-35GB)
# - Speed: 40-50% faster (no multi-scale)
# - Quality: 92-95% classification (vs 94-97%)
# - Artifacts: 5-7% (vs 2-5%)
#
# EXPECTED PERFORMANCE (28GB RAM, RTX 4080, 18M point tile):
# - Feature computation: ~2-3 min (vs ~3-5 min multi-scale)
# - DTM augmentation: ~1-1.5 min (vs ~1.5-2.5 min)
# - Ground truth: ~2-4 min (vs ~3-6 min)
# - Classification: ~1-2 min
# - Total: ~8-12 min per tile (vs ~12-18 min)
#
# WHEN TO USE THIS CONFIG:
# - System has 28-32GB RAM (vs 64GB+ for asprs_complete)
# - Faster processing is priority over maximum quality
# - Acceptable artifact rate is 5-7% (vs 2-5%)
# - You're experiencing OOM (out of memory) crashes
#
# WHEN NOT TO USE:
# - System has 64GB+ RAM â†’ use asprs_complete.yaml
# - Scan line artifacts are critical issue
# - Need maximum facade detection quality
# - Processing time is not a constraint
#
# ============================================================================
