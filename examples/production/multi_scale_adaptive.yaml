# ============================================================================
# IGN LiDAR HD - Multi-Scale with Adaptive Aggregation v6.3
# ============================================================================
# LAST UPDATED: October 25, 2025
#
# Demonstrates adaptive per-point scale selection (NEW in v6.3)
# Use this for complex urban geometry with edges, corners, and varied surfaces
# ============================================================================

config_version: "6.3.0"
preset_name: "multi_scale_adaptive_urban"

# ============================================================================
# PROCESSOR CONFIGURATION
# ============================================================================
processor:
  lod_level: "LOD2"
  processing_mode: "patches_only"

  use_gpu: true
  num_workers: 0

  patch_size: 150.0
  num_points: 16384

# ============================================================================
# PREPROCESSING CONFIGURATION
# ============================================================================
preprocess:
  enabled: false
  sor_k: 12
  sor_std: 2.0
  ror_radius: 1.0
  ror_neighbors: 4
  voxel_enabled: false
  voxel_size: 0.1

# ============================================================================
# STITCHING CONFIGURATION
# ============================================================================
stitching:
  enabled: false
  buffer_size: 10.0
  auto_detect_neighbors: true
  auto_download_neighbors: false
  cache_enabled: true

# ============================================================================
# FEATURES - ADAPTIVE MULTI-SCALE CONFIGURATION
# ============================================================================
features:
  mode: "lod2"

  # Base parameters (overridden by multi-scale)
  k_neighbors: 30
  search_radius: 3.0

  # Core features
  compute_normals: true
  compute_curvature: true
  compute_geometric: true

  # ========================================================================
  # ADAPTIVE MULTI-SCALE (NEW in v6.3)
  # ========================================================================
  # Intelligently selects best scale per point based on local geometry:
  # - Complex geometry (edges, corners) → fine scales for detail
  # - Homogeneous regions (planes) → coarse scales for stability
  # - Artifact-prone areas → down-weighted automatically
  #
  # Benefits:
  # - Better edge preservation than variance_weighted
  # - Better stability on planes than weighted_average
  # - Automatic adaptation to geometry complexity
  #
  # Trade-offs:
  # - ~10-20% slower than variance_weighted
  # - Requires geometric features (planarity/linearity) for full benefit
  # ========================================================================

  multi_scale_computation: true

  # Define scales (same as other multi-scale methods)
  scales:
    - name: fine
      k_neighbors: 20
      search_radius: 1.0
      weight: 0.3 # Initial preference weight

    - name: medium
      k_neighbors: 50
      search_radius: 2.5
      weight: 0.5

    - name: coarse
      k_neighbors: 100
      search_radius: 5.0
      weight: 0.2

  # ADAPTIVE AGGREGATION (NEW!)
  aggregation_method: "adaptive"
  variance_penalty_factor: 2.0 # Still applies to high-variance scales

  # Artifact detection (works with adaptive)
  artifact_detection: true
  artifact_variance_threshold: 0.15

  # Performance optimization
  reuse_kdtrees_across_scales: true
  cache_scale_results: true

# ============================================================================
# OUTPUT
# ============================================================================
output:
  format: "laz"

  extra_dims:
    - planarity
    - linearity
    - sphericity
    - verticality
    - curvature
# ============================================================================
# USAGE NOTES
# ============================================================================
#
# WHEN TO USE ADAPTIVE:
#   ✓ Urban scenes with buildings (edges, corners, roofs)
#   ✓ Complex geometry with mixed features
#   ✓ When edge preservation is critical
#   ✓ When you have planarity/linearity features
#
# WHEN TO USE VARIANCE_WEIGHTED INSTEAD:
#   ✓ Mostly planar scenes (terrain, roads)
#   ✓ When speed is more important than edge quality
#   ✓ When geometric features unavailable
#
# PERFORMANCE COMPARISON (1M points):
#   - weighted_average: ~5s (baseline, no artifact suppression)
#   - variance_weighted: ~6s (good artifact suppression)
#   - adaptive: ~7s (best quality, geometry-aware)
#
# EXPECTED RESULTS:
#   - Sharp edges at building corners
#   - Stable planes on roofs and ground
#   - 50-75% artifact reduction
#   - Automatic adaptation to local geometry
#
# ============================================================================
