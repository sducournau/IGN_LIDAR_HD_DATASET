# ============================================================================
# IGN LiDAR HD - ASPRS GPU Configuration (16GB VRAM)
# ============================================================================
# Purpose: Optimized for GPUs with 16GB VRAM (RTX 4080, 4070 Ti Super, 3090)
#
# Target Hardware:
# - GPU: 16GB VRAM (RTX 4080, 4070 Ti Super, RTX 3090, A4000)
# - RAM: 32GB+ system memory
# - CUDA: 11.0+
#
# Performance (20M point tile):
# - Total time: ~8-14 minutes
# - GPU FAISS: ~2-3 minutes (vs 26 min CPU)
# - Quality: Excellent (balanced DTM augmentation)
#
# Key Features:
# - GPU FAISS for k-NN (25M point threshold)
# - 2m² DTM augmentation (balanced quality/performance)
# - Single worker (GPU optimal)
# - 8M point batches
#
# Usage:
#   ign-lidar-hd process \
#     -c examples/config_asprs_gpu_16gb.yaml \
#     input_dir="/path/to/tiles" \
#     output_dir="/path/to/output"
# ============================================================================

defaults:
  - base/processor
  - base/features
  - base/data_sources
  - base/output
  - base/monitoring
  - _self_

config_version: "5.4.0"
config_name: "asprs_gpu_16gb"
config_description: "ASPRS GPU-Optimized for 16GB VRAM Cards"

# ============================================================================
# PROCESSOR - GPU OPTIMIZED
# ============================================================================
processor:
  lod_level: "ASPRS"
  processing_mode: "enriched_only"
  use_gpu: true
  gpu_batch_size: 8_000_000 # 8M points per batch
  gpu_memory_target: 0.85 # Use 85% of VRAM
  gpu_streams: 6 # 6 CUDA streams for parallelism

  # GPU FAISS Configuration (NEW - addresses hardcoded 15M limit)
  faiss_gpu_threshold: 25_000_000 # Allow GPU FAISS up to 25M points
  faiss_allow_large_gpu: true # Override safety check for 16GB+ GPUs
  faiss_estimated_temp_memory_gb: 4.0 # Temp memory for FAISS

  vram_limit_gb: 14 # Leave 2GB headroom
  cleanup_frequency: 3
  num_workers: 1 # Single worker for GPU (CUDA limitation)
  chunk_size: 8_000_000

  ground_truth_method: "gpu"
  ground_truth_chunk_size: 8_000_000

  reclassification:
    enabled: true
    acceleration_mode: "gpu"
    chunk_size: 6_000_000
    min_confidence: 0.75
    use_geometric_rules: true
    use_ndvi_classification: true
    show_progress: true

  output_format: "laz"
  skip_existing: false
  use_strategy_pattern: true
  use_stitching: false
  enable_memory_pooling: true
  enable_async_transfers: true
  adaptive_chunk_sizing: true

# ============================================================================
# FEATURES - GPU ACCELERATED
# ============================================================================
features:
  mode: "asprs_classes"
  k_neighbors: 60 # High quality
  search_radius: 1.5

  use_gpu: true
  gpu_batch_size: 8_000_000
  neighbor_query_batch_size: 8_000_000
  feature_batch_size: 6_000_000

  # Essential features
  compute_normals: true
  compute_curvature: true
  compute_height: true
  compute_geometric: true
  compute_planarity: true
  compute_verticality: true
  compute_linearity: true
  compute_sphericity: true
  compute_eigenfeatures: true

  # Height computation
  height_method: "hybrid"
  use_rge_alti_for_height: true
  dtm_interpolation: "cubic"
  compute_height_above_ground: true
  compute_height_local: true
  compute_z_from_dtm: true

  # Spectral features
  use_rgb: true
  use_nir: true
  compute_ndvi: true

  # Disable expensive features
  compute_architectural: false
  compute_boundaries: false
  compute_multiscale: false

  # Caching
  enable_caching: true
  cache_max_size: 100
  enable_auto_tuning: true
  validate_features: true
  handle_nan_values: true

# ============================================================================
# DATA SOURCES
# ============================================================================
data_sources:
  bd_topo:
    enabled: true
    features:
      buildings: true
      roads: true
      water: true
      vegetation: false
    wfs_url: "https://data.geopf.fr/wfs"
    max_features: 10000
    timeout: 30
    cache_enabled: true
    use_gpu: true
    road_buffer: 2.5

  bd_topo_bridges: true
  bd_topo_power_lines: true
  bd_topo_sports: true
  bd_topo_cemeteries: true
  bd_topo_parking: false

  cadastre:
    enabled: true
    wfs_url: "https://data.geopf.fr/wfs"
    typename: "CADASTRALPARCELS.PARCELLAIRE_EXPRESS:parcelle"
    use_as_building_proxy: true

  osm:
    enabled: true
    overpass_url: "https://overpass-api.de/api/interpreter"
    timeout: 180
    cache_enabled: true
    cache_ttl_days: 30

  # RGE ALTI - BALANCED DTM AUGMENTATION (2m²)
  rge_alti:
    enabled: true
    use_wcs: true
    wcs_url: "https://wxs.ign.fr/altimetrie/geoportail/r/wcs"
    coverage_id: "ELEVATION.ELEVATIONGRIDCOVERAGE.HIGHRES"
    resolution: 1.0
    cache_enabled: true
    cache_ttl_days: 90

    # Balanced augmentation - 2m² spacing
    augment_ground_points: true
    augmentation_spacing: 2.0 # Balanced: quality + keeps under GPU threshold
    augmentation_areas:
      - "vegetation" # Critical for height accuracy
      - "gaps" # Fill coverage gaps
      - "buildings" # Moderate coverage

    compute_height_from_dtm: true
    dtm_height_priority: "medium"

# ============================================================================
# GROUND TRUTH - GPU ACCELERATED
# ============================================================================
ground_truth:
  enabled: true
  method: "gpu"
  chunk_size: 8_000_000
  cache_compression: true
  preclassify: true
  show_progress: true
  use_gpu: true

  adaptive_mode: true
  fuzzy_boundary_enabled: true
  fuzzy_boundary_outer: 2.5

  # RGE ALTI augmentation (2m² spacing)
  rge_alti:
    enabled: true
    augment_ground: true
    augmentation_strategy: "intelligent"
    augmentation_spacing: 2.0
    min_spacing_to_existing: 1.5
    augmentation_priority:
      vegetation: true
      buildings: true
      water: false
      roads: false
      gaps: true
    max_height_difference: 3.0
    validate_against_neighbors: true
    synthetic_ground_class: 2
    mark_as_synthetic: true

  bd_topo:
    enabled: true
    classification_mapping:
      buildings: 6
      roads: 11
      water: 9
      low_vegetation: 3
      medium_vegetation: 4
      high_vegetation: 5
      bridges: 17
      power_lines: 14
    road_buffer: 3.0
    building_buffer: 1.2

  parallel_fetch: true
  max_parallel_requests: 16

# ============================================================================
# OUTPUT
# ============================================================================
output:
  format: "laz"
  save_enriched: true
  save_patches: false
  save_metadata: true
  save_stats: true
  validate_output: true
  save_fusion_report: true
  save_dtm_augmentation_report: true
  include_dtm_height: true
  include_synthetic_flag: true

# ============================================================================
# PREPROCESS
# ============================================================================
preprocess:
  enabled: false
  remove_duplicates: true
  remove_outliers: true
  outlier_std_multiplier: 3.0

stitching:
  enabled: false
  buffer_size: 10.0
  blend_overlap: true

# ============================================================================
# VARIABLE OBJECT FILTERING
# ============================================================================
variable_object_filtering:
  enabled: true
  filter_vehicles: true
  vehicle_height_range: [0.8, 4.0]
  filter_urban_furniture: true
  furniture_height_range: [0.5, 4.0]
  create_vehicle_class: true
  vehicle_class_code: 18

  building_fusion:
    enabled: true
    source_priority: ["bd_topo", "cadastre", "osm"]
    min_quality_score: 0.5
    fusion_mode: "best"
    enable_multi_source_fusion: true

  adaptive_building_classification:
    enabled: true
    signature:
      min_height: 1.2
      wall_verticality_min: 0.6
      roof_planarity_min: 0.7
    enable_adaptive_expansion: true
    enable_intelligent_rejection: true

# ============================================================================
# LOGGING
# ============================================================================
logging:
  level: INFO
  show_progress: true
  detailed_timing: true
  enable_performance_metrics: true
  enable_profiling: false

# ============================================================================
# OPTIMIZATIONS
# ============================================================================
optimizations:
  enable_caching: true
  cache_max_size_mb: 256
  enable_parallel_processing: false # Disabled for GPU (single worker)
  max_workers: 1
  enable_auto_tuning: true
  adaptive_parameters: true

validation:
  strict_validation: true
  check_gpu_availability: true
  check_memory_requirements: true

hardware:
  auto_detect: true
  prefer_gpu: true
  fallback_cpu: true

# ============================================================================
# HYDRA
# ============================================================================
hydra:
  run:
    dir: outputs/asprs_gpu_16gb/${now:%Y-%m-%d}/${now:%H-%M-%S}
  job:
    name: asprs_gpu_16gb
# ============================================================================
# EXPECTED PERFORMANCE (RTX 4080, 32GB RAM, 20M point tile)
# ============================================================================
# Processing Time:
#   - Feature computation (k-NN): ~2-3 minutes (GPU FAISS)
#   - DTM augmentation: ~1-2 minutes (~40-60K synthetic points)
#   - Building fusion: ~2-3 minutes
#   - Ground truth: ~1-2 minutes (GPU)
#   - Classification: ~30-60 seconds (GPU)
#   - I/O: ~2-3 minutes
#   - TOTAL: ~8-14 minutes per tile
#
# Memory Usage:
#   - System RAM: 20-26GB peak
#   - VRAM: 10-14GB peak
#
# Quality:
#   - Overall accuracy: 89-96%
#   - Building detection: 92-97%
#   - Road detection: 81-91%
#   - Ground elevation: <15cm RMSE
#
# Key Advantages:
#   - GPU FAISS: 8-10× faster than CPU (2-3 min vs 26 min)
#   - Balanced DTM: Good quality without excessive points
#   - Optimal for 16GB VRAM cards
#   - Configurable FAISS threshold (overrides 15M hardcoded limit)
# ============================================================================
