# ========================================================================
# LOD3 Training Patches Configuration
# ========================================================================
# Purpose: Generate ML training patches with full features for LOD3 classification
#
# Key Features:
# - Multi-format output: NPZ (training) + LAZ (visualization/GIS)
# - Architecture-based naming: {tile}_{architecture}_patch_{idx}.{ext}
# - RGB/NIR/NDVI preservation from input LAZ files
# - Geometric features recalculated at tile scale before extraction
# - Data augmentation enabled (rotation, jitter, scale, dropout)
# - Preprocessing enabled (SOR, ROR) to clean artifacts
#
# Output Example:
#   LHD_FXX_0649_6863_pointnet++_patch_0001.npz
#   LHD_FXX_0649_6863_pointnet++_patch_0001.laz (with all features as extra dims)
#   LHD_FXX_0649_6863_pointnet++_patch_0001_aug_0.npz (augmented versions)
# ========================================================================

processor:
  lod_level: LOD3
  architecture: hybrid # Architecture name embedded in patch filenames
  use_gpu: true
  num_workers: 1 # Moderate parallelism for balanced memory/speed
  patch_size: 150.0 # Patch size in meters (150m patches)
  patch_overlap: 0.1 # 10% overlap for better boundary coverage
  num_points: 32768 # Target points per patch (32k for PointNet++)
  augment: true # Enable augmentation for training
  num_augmentations: 3 # 3 augmented versions per patch
  pin_memory: true

features:
  mode: full
  k_neighbors: 30
  search_radius: 1.5 # Radius search eliminates scan line artifacts
  include_extra: true
  use_rgb: true
  use_infrared: true
  compute_ndvi: true
  sampling_method: fps
  normalize_xyz: true # Normalize for training
  normalize_features: true # Normalize for training
  gpu_batch_size: 1000000
  use_gpu_chunked: true

preprocess:
  enabled: true # Enable preprocessing for training
  sor_k: 12
  sor_std: 2.0
  ror_radius: 1.0
  ror_neighbors: 4
  voxel_enabled: false
  voxel_size: 0.1

stitching:
  enabled: true # Enable tile stitching (optional for boundary features)
  buffer_size: 15.0
  auto_detect_neighbors: true
  auto_download_neighbors: true
  cache_enabled: true

output:
  format: npz,laz # Multi-format output: NPZ for training + LAZ with all features
  processing_mode: patches_only # Create ML training patches (patches_only, both, enriched_only)
  save_stats: true
  save_metadata: true
  compression: null # No additional compression (npz already compressed)
input_dir: /mnt/c/Users/Simon/ign/enriched_tiles
output_dir: /mnt/c/Users/Simon/ign/patches
