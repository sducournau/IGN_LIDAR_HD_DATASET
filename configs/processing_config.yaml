# Processing Configuration with Multi-Source Data Integration
# Includes: BD TOPO®, BD Forêt®, RPG, Cadastre
# Date: October 15, 2025
# Updated: Latest dataset versions (BD TOPO V3, BD Forêt V2, RPG 2024, Cadastre current)

# ============================================================================
# Input/Output Configuration
# ============================================================================

input:
  data_dir: "data/raw/lidar"
  tile_pattern: "*.laz"
  crs: "EPSG:2154" # Lambert 93

output:
  base_dir: "data/processed"
  format: "laz" # laz, npz, hdf5
  save_enriched: true # Save enriched LAZ files
  save_patches: true # Save patches for ML
  save_statistics: true # Save per-tile statistics

# ============================================================================
# Processing Pipeline Configuration
# ============================================================================

pipeline:
  stages:
    # Stage 1: Feature Computation
    compute_features:
      enabled: true
      geometric_features: true
      k_neighbors: 20
      compute_normals: true
      compute_curvature: true
      compute_height: true

    # Stage 2: RGB/NIR Processing
    rgb_processing:
      enabled: true
      normalize_rgb: true # Fix RGB normalization (0-1 range)
      include_nir: true
      compute_ndvi: true

    # Stage 3: Multi-Source Classification
    classification:
      enabled: true

      # Ground Truth from BD TOPO®
      ground_truth:
        enabled: true
        sources:
          buildings: true
          roads: true
          railways: true
          water: true
          vegetation: true
          bridges: true
          parking: true
          cemeteries: false
          power_lines: false
          sports: true

        # Parameters for feature generation (improved for better classification)
        parameters:
          road_width_fallback: 4.0 # Default road width (m)
          road_buffer_tolerance: 0.5 # Additional buffer for roads (m) - increased for better coverage
          railway_width_fallback: 3.5 # Default railway width (m)
          railway_buffer_tolerance: 0.6 # Additional buffer for railways (m) - wider for ballast
          power_line_buffer: 2.0 # Buffer for power lines (m)

          # Height filtering (exclude bridges/overpasses)
          road_height_max: 1.5 # Maximum height for ground-level roads (m)
          road_height_min: -0.3 # Minimum height for roads (m)
          rail_height_max: 1.2 # Maximum height for ground-level railways (m)
          rail_height_min: -0.2 # Minimum height for railways (m)

          # Geometric filtering
          road_planarity_min: 0.6 # Minimum planarity for roads (0-1)
          rail_planarity_min: 0.5 # Minimum planarity for railways (0-1)

          # Intensity filtering (surface reflectance)
          enable_intensity_filter: true
          road_intensity_min: 0.15 # Minimum intensity for roads
          road_intensity_max: 0.7 # Maximum intensity for roads
          rail_intensity_min: 0.1 # Minimum intensity for railways
          rail_intensity_max: 0.8 # Maximum intensity for railways

        cache_dir: "cache/ground_truth"
        use_cache: true

      # Forest Types from BD Forêt®
      forest_types:
        enabled: true
        fetch_polygons: true
        label_species: true
        estimate_height: true
        export_attributes: true # Export as extra LAZ dimensions
        cache_dir: "cache/bd_foret"
        use_cache: true

      # Agriculture from RPG
      agriculture:
        enabled: true
        year: 2024 # Latest: 2024 (Available: 2024, 2023, 2022, 2021, 2020)
        label_crops: true
        apply_asprs_code: true # Code 44
        include_organic: true
        export_attributes: true # Export crop data as LAZ dimensions
        cache_dir: "cache/rpg"
        use_cache: true

      # Cadastre from BD PARCELLAIRE
      cadastre:
        enabled: true
        group_by_parcel: true
        label_parcel_id: true
        compute_statistics: true
        export_parcel_stats: true
        export_attributes: true # Export parcel IDs as LAZ dimensions
        cache_dir: "cache/cadastre"
        use_cache: true

      # Classification Priority (highest to lowest)
      priority:
        - bridge # 17
        - building # 6
        - water # 9
        - power_line # 43
        - rail # 10
        - road # 11
        - cemetery # 42
        - parking # 40
        - sports # 41
        - agriculture # 44
        - vegetation # 3/4/5
        - ground # 2

    # Stage 4: Export and Enrichment
    export:
      enabled: true

      # LAZ Export
      laz:
        enabled: true
        include_classification: true
        include_extra_dims:
          - ndvi
          - height
          - curvature
          - forest_type
          - crop_code
          - crop_category
          - parcel_id
        compression: true

      # GeoJSON Export (for GIS)
      geojson:
        enabled: true
        export_parcels: true
        include_statistics: true
        include_class_distribution: true
        include_crop_distribution: true

      # CSV Export (for analysis)
      csv:
        enabled: true
        include_all_attributes: true
        separate_by_source: false

      # Patch Export (for ML)
      patches:
        enabled: false
        patch_size: 50
        stride: 25
        min_points: 100

# ============================================================================
# Intelligent Skip Configuration
# ============================================================================

skip_checker:
  enabled: true

  # What to check for skip
  check_enriched_laz: true
  check_patches: false
  check_statistics: false

  # Validation options
  validate_content: true # Deep validation of files
  validate_features:
    - classification
    - forest_type
    - crop_code
    - parcel_id

  min_file_size_kb: 10 # Minimum file size to consider valid

  # Skip conditions
  skip_if:
    enriched_exists: true # Skip if enriched LAZ exists
    all_patches_exist: false # Don't require patches
    statistics_exist: false # Don't require statistics

# ============================================================================
# Data Fetcher Configuration
# ============================================================================

data_fetcher:
  # General settings
  timeout_seconds: 60
  max_retries: 3
  retry_delay_seconds: 5

  # WFS Configuration
  wfs:
    base_url: "https://data.geopf.fr/wfs"
    max_features: 10000

    # Layer names
    layers:
      bd_topo:
        buildings: "BDTOPO_V3:batiment"
        roads: "BDTOPO_V3:route"
        railways: "BDTOPO_V3:troncon_de_voie_ferree"
        water: "BDTOPO_V3:surface_hydrographique"
        vegetation: "BDTOPO_V3:zone_de_vegetation"
        bridges: "BDTOPO_V3:pont"
        parking: "BDTOPO_V3:construction_surfacique"
        cemeteries: "BDTOPO_V3:cimetiere"
        power_lines: "BDTOPO_V3:ligne_electrique"
        sports: "BDTOPO_V3:terrain_de_sport"

      bd_foret: "BDFORET_V2:formation_vegetale"

      rpg:
        2023: "RPG.2023:parcelles_graphiques"
        2022: "RPG.2022:parcelles_graphiques"
        2021: "RPG.2021:parcelles_graphiques"
        2020: "RPG.2020:parcelles_graphiques"

      cadastre: "CADASTRALPARCELS.PARCELLAIRE_EXPRESS:parcelle"

  # Buffer configuration (deprecated - use parameters section above for roads/railways)
  # These are kept for backward compatibility with other features
  buffers:
    power_lines: 5.0 # meters
    buildings: 0.0 # No buffer

    # Roads and railways use intelligent buffering based on width attributes
    # See parameters section for road_buffer_tolerance and railway_buffer_tolerance

# ============================================================================
# Cache Configuration
# ============================================================================

cache:
  enabled: true
  base_dir: "cache"

  # Per-source cache settings
  sources:
    ground_truth:
      enabled: true
      ttl_days: 30
      max_size_mb: 500

    bd_foret:
      enabled: true
      ttl_days: 365
      max_size_mb: 200

    rpg:
      enabled: true
      ttl_days: 365
      max_size_mb: 300

    cadastre:
      enabled: true
      ttl_days: 180
      max_size_mb: 400

  # Cache cleanup
  cleanup:
    enabled: true
    strategy: "lru" # lru or fifo
    run_on_startup: false

# ============================================================================
# Performance Configuration
# ============================================================================

performance:
  # Memory management
  memory:
    max_points_per_tile: 50000000 # 50M points max
    chunk_size: 10000000 # 10M points per chunk
    use_memory_mapping: true

  # Parallel processing
  parallel:
    enabled: true
    n_workers: 4
    method: "multiprocessing" # multiprocessing or threading

    # What to parallelize
    parallelize:
      tiles: true
      fetchers: false # Fetchers already optimized
      patch_extraction: false

  # Spatial indexing
  spatial_index:
    enabled: true
    method: "rtree" # rtree or kdtree
    cache_indices: true

# ============================================================================
# Quality Control Configuration
# ============================================================================

quality_control:
  enabled: true

  # Validation checks
  checks:
    # Input validation
    input_validation:
      check_crs: true
      check_point_count: true
      min_points: 1000
      check_bbox: true

    # Processing validation
    processing_validation:
      check_feature_validity: true
      check_classification_coverage: true
      min_classified_ratio: 0.5 # 50% points must be classified

    # Output validation
    output_validation:
      check_file_integrity: true
      verify_extra_dimensions: true
      check_statistics: true

  # Actions on failure
  on_failure:
    strategy: "log_and_continue" # log_and_continue, log_and_skip, or raise
    save_problematic_tiles: true
    problematic_tiles_file: "logs/problematic_tiles.txt"

# ============================================================================
# Logging Configuration
# ============================================================================

logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

  # Output
  console:
    enabled: true
    level: "INFO"

  file:
    enabled: true
    path: "logs/processing.log"
    level: "DEBUG"
    rotation:
      enabled: true
      max_size_mb: 100
      backup_count: 5

  # Per-module logging
  modules:
    data_fetcher: "INFO"
    skip_checker: "INFO"
    classification: "INFO"
    feature_computation: "DEBUG"
    wfs: "WARNING"

# ============================================================================
# Reporting Configuration
# ============================================================================

reporting:
  enabled: true

  # Statistics to track
  statistics:
    per_tile:
      - point_count
      - classified_count
      - classification_distribution
      - parcel_count
      - forest_coverage
      - agriculture_coverage
      - processing_time

    aggregate:
      - total_tiles_processed
      - total_points_processed
      - total_parcels
      - average_points_per_tile
      - classification_summary
      - processing_throughput

  # Report output
  output:
    json:
      enabled: true
      path: "reports/processing_report.json"

    html:
      enabled: true
      path: "reports/processing_report.html"
      include_plots: true

    csv:
      enabled: true
      path: "reports/tile_statistics.csv"

# ============================================================================
# Advanced Options
# ============================================================================

advanced:
  # Debugging
  debug:
    enabled: false
    save_intermediate_results: false
    profiling: false
    memory_profiling: false

  # Experimental features
  experimental:
    use_ml_refinement: false
    use_temporal_analysis: false
    use_multiscale_features: false

  # Compatibility
  compatibility:
    strict_mode: false # Strict validation
    allow_partial_tiles: true # Allow processing incomplete tiles
    fallback_on_error: true # Use fallback values on error
