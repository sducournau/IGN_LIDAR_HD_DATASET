# Boundary-Aware Processing with Auto-Download
#
# This experiment configuration demonstrates:
# - Automatic neighbor detection via bounding box checks
# - Automatic download of missing adjacent tiles
# - Seamless boundary-aware feature computation
# - Validation of downloaded tiles
#
# Use for: Processing tiles with potentially missing neighbors

# @package _global_
defaults:
  - _base/boundary_aware_common # Inherit common boundary-aware settings
  - _self_ # Apply experiment overrides last

# Experiment metadata
experiment_name: "boundary_aware_autodownload"
experiment_description: "Boundary-aware processing with automatic neighbor download"

# Auto-download specific overrides
stitching:
  auto_detect_neighbors: true
  auto_download_neighbors: true # âš¡ Download missing neighbors
  validate_tiles: true
# Notes:
# This configuration will:
# 1. Load each tile
# 2. Detect adjacent tiles via bbox checks
# 3. Download any missing neighbors from IGN WFS
# 4. Validate all tiles (existing and downloaded)
# 5. Extract buffer zones from neighbors
# 6. Compute boundary-aware features
# 7. Process with seamless boundaries
#
# Expected behavior:
# - First tile: Downloads up to 8 neighbors (~10-20 minutes)
# - Subsequent tiles: Reuses downloaded neighbors (~1 minute each)
# - Network required for WFS queries and downloads
# - ~1-2 GB additional storage per tile region
