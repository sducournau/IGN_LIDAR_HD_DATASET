# ============================================================================
# IGN LiDAR HD - Preset: LOD2
# ============================================================================
# Inherits: base.yaml
#
# USE CASE: Building modeling, facade detection, roof planes
# SPEED: ðŸš€ FAST (1.5Ã— slower than minimal, still efficient)
#
# FEATURES:
#   - Geometric features (curvature, planarity, height)
#   - Architectural feature detection
#   - Building-focused classification
#   - Ground truth from BD TOPO
#
# WHEN TO USE:
#   âœ“ Building facade detection and modeling
#   âœ“ Roof plane extraction (flat, gable, hip roofs)
#   âœ“ Urban modeling and city digital twins
#   âœ“ Building footprint refinement
#   âœ“ Architectural analysis (coarse level)
#
# CLASSIFICATION OUTPUT:
#   LOD2 Building Classes:
#     - wall, roof_flat, roof_gable, roof_hip
#     - chimney, foundation, balcony
#     - ground, vegetation (low/high), water, other
#
# USAGE:
#   ign-lidar-hd process --preset lod2 input/ output/
#
# ALTERNATIVES:
#   - For quick preview â†’ use 'minimal' preset
#   - For detailed architecture â†’ use 'lod3' preset
#   - For standard classification â†’ use 'asprs' preset
#
# Version: 5.1.0
# Date: October 18, 2025
# ============================================================================

# Inherit from base configuration
defaults:
  - ../base
  - _self_

# Preset metadata
config_version: "5.1.0"
preset_name: "lod2"

# ============================================================================
# LOD2 PRESET OVERRIDES
# ============================================================================

# Processor: LOD2 classification scheme
processor:
  lod_level: "LOD2" # Use LOD2 building classification
  processing_mode: "enriched_only" # Enriched LAZ output

  # GPU settings (required for direct config loading)
  use_gpu: true # Enable GPU acceleration
  num_workers: 1 # Single worker for GPU processing
  patch_overlap: 0.1 # 10% overlap
  num_points: 32768 # Points per patch

  # Balanced GPU settings
  gpu_batch_size: 8_000_000 # 8M points (balanced)
  gpu_memory_target: 0.85 # 85% VRAM usage
  gpu_streams: 4 # CUDA streams for parallel processing

  # ============================================================================
  # CUDA Optimizations (Default: Disabled - Enable in hardware config)
  # ============================================================================
  # For maximum performance, enable in hardware-specific configs (rtx4090.yaml, etc.)
  use_cuda_streams: false # Enable in hardware configs for +20-30% throughput
  enable_memory_pooling: true # GPU memory pooling
  enable_pipeline_optimization: true # Overlapped computation/transfer
  auto_optimize: true # Auto-detect optimal settings

  # Auto-configured when auto_optimize=true
  chunk_size: null # null = auto-optimize based on VRAM
  vram_limit_gb: null # null = auto-detect
  cleanup_frequency: 20 # GPU memory cleanup frequency

  # Strategy pattern
  use_strategy_pattern: true # Use new Strategy Pattern

  # Optimization flags
  use_optimized_ground_truth: true # Use optimized ground truth classifier
  enable_async_transfers: true # Async CPU-GPU transfers (legacy)
  adaptive_chunk_sizing: true # Dynamic chunk sizing (legacy)

  # Processing settings
  skip_existing: false # Re-process existing files
  output_format: "laz" # Output format
  use_stitching: false # Tile stitching disabled by default

  # Patch extraction
  patch_size: 150.0 # Patch size in meters
  architecture: "direct" # Direct patch extraction
  augment: false # No augmentation for enriched-only mode
  num_augmentations: 3 # Augmentations if enabled

  # Ground truth settings
  ground_truth_method: "auto" # GPU chunked or STRtree
  ground_truth_chunk_size: 5_000_000 # 5M points per chunk

  # Enable reclassification for better building detection
  reclassification:
    enabled: true
    use_geometric_rules: true # Important for buildings
    min_confidence: 0.7

  # ============================================================================
  # BUILDING CLUSTERING (V5.1 Enhancement)
  # ============================================================================
  building_clustering:
    enabled: true # Enable building clustering by footprint
    use_centroid_attraction: true # Assign ambiguous points to nearest centroid
    attraction_radius: 5.0 # Maximum distance for centroid attraction (meters)
    min_points_per_building: 10 # Minimum points to form valid cluster
    adjust_polygons: true # Adjust polygon boundaries to match point cloud
    polygon_buffer: 0.5 # Buffer distance for polygon adjustment (meters)
    wall_buffer: 0.3 # Additional buffer for near-vertical walls (meters)
    detect_near_vertical_walls: true # Enable wall detection for LOD2

  # ============================================================================
  # PLANE DETECTION (V5.1 Enhancement)
  # ============================================================================
  plane_detection:
    enabled: true # Enable plane detection for LOD2

    # Horizontal planes (flat roofs, terraces)
    horizontal_angle_max: 10.0 # Maximum angle from horizontal (degrees)
    horizontal_planarity_min: 0.75 # Minimum planarity for horizontal planes

    # Vertical planes (walls, facades)
    vertical_angle_min: 75.0 # Minimum angle from horizontal (degrees)
    vertical_planarity_min: 0.65 # Minimum planarity for vertical planes

    # Inclined planes (pitched roofs)
    inclined_angle_min: 15.0 # Minimum angle for inclined surfaces (degrees)
    inclined_angle_max: 70.0 # Maximum angle for inclined surfaces (degrees)
    inclined_planarity_min: 0.70 # Minimum planarity for inclined planes

    # General parameters
    min_points_per_plane: 50 # Minimum points to form valid plane
    max_plane_distance: 0.15 # Maximum distance from plane for inliers (meters)
    use_spatial_coherence: true # Use spatial clustering for plane segmentation

    # Roof type classification
    classify_roof_types: true # Enable automatic roof type classification

    # Architectural elements
    detect_architectural_elements: false # Disabled for LOD2 (use LOD3)

# Features: LOD2-optimized feature set
features:
  mode: "lod2" # LOD2 feature mode

  # Required fields for direct config loading
  include_extra: true # Include additional features
  use_gpu_chunked: true # GPU chunked processing
  gpu_batch_size: 2_000_000 # 1M points per batch
  use_nir: false # No NIR by default

  # Balanced geometric parameters
  k_neighbors: 20 # Balanced neighborhood size
  search_radius: 1.0 # 1 meter radius

  # Essential LOD2 features
  compute_normals: true
  compute_curvature: true # Important for roof detection
  compute_height: true # Height above ground
  compute_geometric: true # Planarity, verticality

  # Architectural features for building detection
  compute_architectural: true # Enable architectural features
  architectural_styles: false # Basic detection only

  # Boundaries not needed for LOD2
  compute_boundaries: false

  # No spectral features (unless needed)
  use_rgb: false # Can enable if color is needed
  use_infrared: false
  compute_ndvi: false

# Data Sources: BD TOPO for building ground truth
data_sources:
  # BD TOPO: Essential for LOD2 classification
  bd_topo:
    enabled: true
    features:
      buildings: true # Essential for LOD2
      roads: true # Context
      water: false # Not critical for LOD2
      vegetation: false # Not critical for LOD2

# Preprocessing: Required section
preprocess:
  enabled: false # Disabled by default

# Stitching: Required section
stitching:
  enabled: false # Disabled by default
  buffer_size: 10.0 # 10 meter buffer

# Output: Required section
output:
  format: "laz" # Output format
  save_enriched: true # Save enriched LAZ with LOD2 classes
  save_patches: false # No patches for enriched-only mode
  save_metadata: true # Save metadata
  save_stats: true # Save classification stats

# ============================================================================
# EXPECTED PERFORMANCE
# ============================================================================
# Processing time (relative to base):
#   - 1.5Ã— slower than minimal
#   - Comparable to base configuration
#   - 2Ã— faster than LOD3
#
# Memory usage:
#   - Moderate (works on GPUs with 8GB+ VRAM)
#
# Output file size:
#   - Medium (LOD2 classifications + geometric features)
#
# Classification accuracy:
#   - High for building structures
#   - Good for facade/roof detection
#   - Excellent for urban modeling
# ============================================================================
